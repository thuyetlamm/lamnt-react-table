{"version":3,"file":"index.js","sources":["../src/components/Row.tsx","../src/components/TableEmptyRows.tsx","../src/components/TableHeadCustom.tsx","../src/components/EmptyContent.tsx","../src/components/TableNoData.tsx","../src/components/TableSelectedActions.tsx","../src/hooks/useTable.ts","../src/index.tsx"],"sourcesContent":["import { Checkbox, TableCell, TableRow } from '@mui/material'\nimport React from 'react'\n\ntype RowProps = {\n  row: any\n  selected: boolean\n  onEditRow?: VoidFunction\n  onSelectRow: VoidFunction\n  onDeleteRow?: VoidFunction\n}\n\nfunction Row({ row, selected, onEditRow, onSelectRow }: RowProps) {\n  return (\n    <TableRow hover selected>\n      <TableCell padding='checkbox'>\n        <Checkbox checked={selected} onClick={onSelectRow} />\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default Row\n","/* eslint-disable react/react-in-jsx-scope */\n// @mui\nimport { TableRow, TableCell } from '@mui/material'\nimport React from 'react'\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number\n  emptyRows: number\n}\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows\n        })\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  )\n}\n","/* eslint-disable no-unused-vars */\n// @mui\nimport { Theme } from '@mui/material/styles'\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel\n} from '@mui/material'\nimport React from 'react'\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)'\n} as const\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc'\n  orderBy?: string\n  headLabel: any[]\n  rowCount?: number\n  numSelected?: number\n  onSort?: (id: string) => void\n  onSelectAllRows?: (checked: boolean) => void\n  sx?: SxProps<Theme>\n}\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding='checkbox'>\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc'\n                      ? 'sorted descending'\n                      : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n","/* eslint-disable no-unused-vars */\n// @mui\nimport { styled } from '@mui/material/styles'\nimport { Typography, Box, BoxProps } from '@mui/material'\n\nimport emptyContent from '../assets/illustration_empty_content.svg'\n//\nimport React from 'react'\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(8, 2)\n}))\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  title: string\n  img?: string\n  description?: string\n}\n\nexport default function EmptyContent({\n  title,\n  description,\n  img,\n  ...other\n}: Props) {\n  return (\n    <RootStyle {...other}>\n      {img ? (\n        <img alt='empty content' src={img} style={{ height: 240 }} />\n      ) : null}\n\n      <Typography variant='h5' gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant='body2' sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </RootStyle>\n  )\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material'\n//\nimport React from 'react'\nimport EmptyContent from './EmptyContent'\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean\n  img?: string\n  title?: string\n}\n\nexport default function TableNoData({\n  isNotFound,\n  img,\n  title = 'No Data'\n}: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            img={img}\n            title={title}\n            sx={{\n              '& span.MuiBox-root': { height: 160 }\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  )\n}\n","/* eslint-disable no-unused-vars */\n// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material'\nimport React from 'react'\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean\n  actions?: React.ReactNode\n  rowCount: number\n  numSelected: number\n  onSelectAllRows: (checked: boolean) => void\n}\n\nexport default function TableSelectedActions({\n  dense,\n  actions,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack\n      direction='row'\n      alignItems='center'\n      sx={{\n        px: 2,\n        top: 0,\n        left: 8,\n        right: 8,\n        zIndex: 9,\n        height: 58,\n        borderRadius: 1,\n        position: 'absolute',\n        bgcolor: 'secondary.custom',\n        ...(dense && {\n          pl: 1,\n          height: 38\n        }),\n        ...sx\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant='subtitle1'\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3\n          })\n        }}\n      >\n        {numSelected} đã chọn\n      </Typography>\n\n      {actions && actions}\n    </Stack>\n  )\n}\n","import { useState } from 'react'\n\n// ----------------------------------------------------------------------\n\nexport type UseTableProps = {\n  dense: boolean\n  page: number\n  setPage: React.Dispatch<React.SetStateAction<number>>\n  rowsPerPage: number\n  order: 'asc' | 'desc'\n  orderBy: string\n  //\n  selected: string[]\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>\n  onSelectRow: (id: string) => void\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void\n  //\n  onSort: (id: string) => void\n  onChangePage: (event: unknown, newPage: number) => void\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport type Props = {\n  defaultDense?: boolean\n  defaultOrder?: 'asc' | 'desc'\n  defaultOrderBy?: string\n  defaultSelected?: string[]\n  defaultRowsPerPage?: number\n  defaultCurrentPage?: number\n}\n\nexport default function useTable(props?: Props) {\n  const [dense, setDense] = useState(props?.defaultDense || false)\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name')\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(\n    props?.defaultOrder || 'asc'\n  )\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0)\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5)\n\n  const [selected, setSelected] = useState<string[]>(\n    props?.defaultSelected || []\n  )\n\n  const onSort = (id: string) => {\n    const isAsc = orderBy === id && order === 'asc'\n    if (id !== '') {\n      setOrder(isAsc ? 'desc' : 'asc')\n      setOrderBy(id)\n    }\n  }\n\n  const onSelectRow = (id: string) => {\n    const selectedIndex = selected.indexOf(id)\n\n    let newSelected: string[] = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n    setSelected(newSelected)\n  }\n\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const onChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked)\n  }\n\n  return {\n    dense,\n    order,\n    page,\n    setPage,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage\n  }\n}\n\n// ----------------------------------------------------------------------\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nexport function emptyRows(\n  page: number,\n  rowsPerPage: number,\n  arrayLength: number\n) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0\n}\n","/* eslint-disable no-unused-vars */\nimport {\n  Box,\n  Card,\n  CardHeader,\n  FormControlLabel,\n  IconButton,\n  Switch,\n  SxProps,\n  Table,\n  TableBody,\n  TableContainer,\n  TablePagination,\n  Tooltip\n} from '@mui/material'\nimport { ColumnHeader } from 'types/table'\nimport Row from 'components/Row'\nimport TableEmptyRows from 'components/TableEmptyRows'\nimport TableHeadCustom from 'components/TableHeadCustom'\nimport TableNoData from 'components/TableNoData'\nimport TableSelectedActions from 'components/TableSelectedActions'\nimport useTable, { emptyRows } from 'hooks/useTable'\nimport * as React from 'react'\nimport { BsFillTrash2Fill } from 'react-icons/bs'\n\ninterface Props {\n  titleTable: string\n  sxTableContainer?: SxProps\n  dataTable: any[]\n  columns: ColumnHeader[]\n  emptyDataURLImage?: string\n  emptyTitle?: string\n}\n\nexport const ReactTableMaterial = ({\n  titleTable,\n  dataTable,\n  sxTableContainer,\n  columns,\n  emptyDataURLImage,\n  emptyTitle\n}: Props) => {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage\n  } = useTable({ defaultOrderBy: 'name', defaultRowsPerPage: 10 })\n\n  const denseHeight = dense ? 60 : 80\n\n  return (\n    <Card>\n      <CardHeader title={titleTable} />\n      <TableContainer\n        sx={{ minWidth: 500, position: 'relative', ...sxTableContainer }}\n      >\n        {selected.length > 0 && (\n          <TableSelectedActions\n            dense={dense}\n            numSelected={selected.length}\n            rowCount={dataTable.length}\n            onSelectAllRows={(checked) =>\n              onSelectAllRows(\n                checked,\n                dataTable.map((row) => row.id)\n              )\n            }\n            actions={\n              <Tooltip title='Delete'>\n                <IconButton color='primary' onClick={() => {}}>\n                  <BsFillTrash2Fill size={20} />\n                </IconButton>\n              </Tooltip>\n            }\n          />\n        )}\n        <Table size={dense ? 'small' : 'medium'} stickyHeader>\n          <TableHeadCustom\n            order={order}\n            orderBy={orderBy}\n            headLabel={columns}\n            rowCount={dataTable.length}\n            numSelected={selected.length}\n            onSort={onSort}\n            onSelectAllRows={(checked) =>\n              onSelectAllRows(\n                checked,\n                dataTable.map((row) => row.id)\n              )\n            }\n          />\n          <TableBody>\n            {dataTable?.map((row) => (\n              <Row\n                key={row.id}\n                row={row}\n                selected={selected.includes(row.id)}\n                onSelectRow={() => onSelectRow(row.id)}\n              />\n            ))}\n            <TableEmptyRows\n              height={denseHeight}\n              emptyRows={emptyRows(page, rowsPerPage, dataTable.length)}\n            />\n\n            <TableNoData\n              title={emptyTitle}\n              img={emptyDataURLImage}\n              isNotFound\n            />\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box sx={{ position: 'relative' }}>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={dataTable.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={onChangePage}\n          onRowsPerPageChange={onChangeRowsPerPage}\n        />\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          label='Dense'\n          sx={{ px: 3, py: 1.5, top: 0, position: { md: 'absolute' } }}\n        />\n      </Box>\n    </Card>\n  )\n}\n"],"names":["Row","_ref","selected","onSelectRow","React","TableRow","hover","TableCell","padding","Checkbox","checked","onClick","TableEmptyRows","emptyRows","height","sx","_extends","colSpan","visuallyHidden","border","margin","width","overflow","position","whiteSpace","clip","TableHeadCustom","order","orderBy","_ref$rowCount","rowCount","headLabel","_ref$numSelected","numSelected","onSort","onSelectAllRows","TableHead","indeterminate","onChange","event","target","map","headCell","key","id","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","direction","textTransform","label","Box","RootStyle","styled","theme","display","textAlign","alignItems","flexDirection","justifyContent","spacing","EmptyContent","_ref2","title","description","img","other","_objectWithoutPropertiesLoose","_excluded","alt","src","style","Typography","variant","gutterBottom","color","TableNoData","isNotFound","_ref$title","p","TableSelectedActions","dense","actions","Stack","px","top","left","right","zIndex","borderRadius","bgcolor","pl","ml","flexGrow","useTable","props","_useState","useState","defaultDense","setDense","_useState2","defaultOrderBy","setOrderBy","_useState3","defaultOrder","setOrder","_useState4","defaultCurrentPage","page","setPage","_useState5","defaultRowsPerPage","rowsPerPage","setRowsPerPage","_useState6","defaultSelected","setSelected","isAsc","selectedIndex","indexOf","newSelected","concat","slice","length","newSelecteds","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","onChangeDense","arrayLength","Math","max","ReactTableMaterial","titleTable","dataTable","sxTableContainer","columns","emptyDataURLImage","emptyTitle","_useTable","denseHeight","Card","CardHeader","TableContainer","row","Tooltip","IconButton","BsFillTrash2Fill","size","Table","stickyHeader","TableBody","includes","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","FormControlLabel","control","Switch","py","md"],"mappings":"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"}